{"ast":null,"code":"var _jsxFileName = \"/home/wajdi/Bureau/Movie-app/src/components/Ubdat.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst object1 = {\n  a: 'somestring',\n  b: 42,\n  c: false\n};\nconsole.log(Object.keys(object1));\n\nfunction Ubdat({\n  el\n}) {\n  _s();\n\n  // pour recupere la valeur\n  const [Inputtt, setInputtt] = useState({\n    title: el.title,\n    genres: el.genres,\n    director: el.director,\n    runtime: el.runtime,\n    posterUrl: el.posterUrl\n  });\n\n  const handleChangee = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputtt({ ...Inputtt,\n      [name]: value\n    });\n    console.log(Inputtt);\n  };\n\n  const updatRow = id => {\n    axios.put(`http://localhost:3008/posts/${id}`, Inputtt).then(response => {\n      setInputtt(response.data);\n    });\n  };\n\n  console.log('updaaaaaate', Inputtt);\n  useEffect(() => {\n    updatRow();\n  }, []); //fin recuperation    \n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShow,\n        children: [\"    \", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 41\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        animation: false,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Modal heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGroupTexte\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"texte\",\n                defaultValue: el.title,\n                placeholder: \"enter texte\",\n                onChange: handleChangee,\n                value: Inputtt.title,\n                name: \"title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGroupTexte\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Geners\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"texte\",\n                defaultValue: el.genres,\n                placeholder: \"enter texte\",\n                onChange: handleChangee,\n                value: Inputtt.genres,\n                name: \"genres\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGroupTexte\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Director\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"texte\",\n                defaultValue: el.director,\n                placeholder: \"enter texte\",\n                onChange: handleChangee,\n                value: Inputtt.director,\n                name: \"director\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGroupTexte\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Runtime\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"texte\",\n                defaultValue: el.runtime,\n                placeholder: \"enter texte\",\n                onChange: handleChangee,\n                value: Inputtt.runtime,\n                name: \"runtime\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGroupTexte\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"PosteUrl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"texte\",\n                defaultValue: el.posterUrl,\n                placeholder: \"enter texte\",\n                onChange: handleChangee,\n                value: Inputtt.posterUrl,\n                name: \"posterUrl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              onClick: () => {\n                updatRow(el.id);\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleClose,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Ubdat, \"y/UUNWj8e7pP1xmAdAYi0buza4I=\");\n\n_c = Ubdat;\nexport default Ubdat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ubdat\");","map":{"version":3,"sources":["/home/wajdi/Bureau/Movie-app/src/components/Ubdat.js"],"names":["React","Button","Modal","Form","useState","useEffect","axios","object1","a","b","c","console","log","Object","keys","Ubdat","el","Inputtt","setInputtt","title","genres","director","runtime","posterUrl","handleChangee","e","name","value","target","updatRow","id","put","then","response","data","show","setShow","handleClose","handleShow"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAeC,KAAf,EAAqBC,IAArB,QAA+B,iBAA/B;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,CAAC,EAAE,YADW;AAEdC,EAAAA,CAAC,EAAE,EAFW;AAGdC,EAAAA,CAAC,EAAE;AAHW,CAAhB;AAMAC,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYP,OAAZ,CAAZ;;AAEA,SAASQ,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAqB;AAAA;;AACjB;AACA,QAAM,CAACC,OAAD,EAASC,UAAT,IAAqBd,QAAQ,CAC/B;AACIe,IAAAA,KAAK,EAACH,EAAE,CAACG,KADb;AAEIC,IAAAA,MAAM,EAACJ,EAAE,CAACI,MAFd;AAGIC,IAAAA,QAAQ,EAACL,EAAE,CAACK,QAHhB;AAIIC,IAAAA,OAAO,EAACN,EAAE,CAACM,OAJf;AAKIC,IAAAA,SAAS,EAACP,EAAE,CAACO;AALjB,GAD+B,CAAnC;;AASA,QAAMC,aAAa,GAAEC,CAAD,IAAK;AACrB,UAAM;AAACC,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAaF,CAAC,CAACG,MAArB;AACAV,IAAAA,UAAU,CACN,EACI,GAAGD,OADP;AACe,OAACS,IAAD,GAAOC;AADtB,KADM,CAAV;AAMAhB,IAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACH,GATD;;AAWA,QAAMY,QAAQ,GAAEC,EAAD,IAAO;AAElBxB,IAAAA,KAAK,CAACyB,GAAN,CAAW,+BAA8BD,EAAG,EAA5C,EAA+Cb,OAA/C,EACCe,IADD,CACMC,QAAQ,IAAI;AAChBf,MAAAA,UAAU,CAAEe,QAAQ,CAACC,IAAX,CAAV;AAA4B,KAF9B;AAGD,GALH;;AAMEvB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA4BK,OAA5B;AAEAZ,EAAAA,SAAS,CAAC,MAAK;AAACwB,IAAAA,QAAQ;AACvB,GADQ,EACP,EADO,CAAT,CA9Be,CAkCrB;;AACI,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBhC,QAAQ,CAAC,KAAD,CAAhC;;AAEF,QAAMiC,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AACE,sBACI;AAAA,2BACK;AAAA,8BACP;AAAQ,QAAA,OAAO,EAAEE,UAAjB;AAAA,wCAAkC;AAAG,UAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,eAIP,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEH,IAAb;AAAmB,QAAA,MAAM,EAAEE,WAA3B;AAAwC,QAAA,SAAS,EAAE,KAAnD;AAAA,gCACE,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,iCAEI,QAAC,IAAD;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,gBAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,OAAnB;AAA2B,gBAAA,YAAY,EAAErB,EAAE,CAACG,KAA5C;AAAmD,gBAAA,WAAW,EAAC,aAA/D;AAA6E,gBAAA,QAAQ,EAAEK,aAAvF;AAAsG,gBAAA,KAAK,EAAEP,OAAO,CAACE,KAArH;AAA4H,gBAAA,IAAI,EAAC;AAAjI;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,gBAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,OAAnB;AAA2B,gBAAA,YAAY,EAAEH,EAAE,CAACI,MAA5C;AAAqD,gBAAA,WAAW,EAAC,aAAjE;AAAgF,gBAAA,QAAQ,EAAEI,aAA1F;AAAyG,gBAAA,KAAK,EAAEP,OAAO,CAACG,MAAxH;AAAgI,gBAAA,IAAI,EAAC;AAArI;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eASI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,gBAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,OAAnB;AAA2B,gBAAA,YAAY,EAAEJ,EAAE,CAACK,QAA5C;AAAuD,gBAAA,WAAW,EAAC,aAAnE;AAAiF,gBAAA,QAAQ,EAAEG,aAA3F;AAA0G,gBAAA,KAAK,EAAEP,OAAO,CAACI,QAAzH;AAAmI,gBAAA,IAAI,EAAC;AAAxI;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAaI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,gBAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,OAAnB;AAA2B,gBAAA,YAAY,EAAEL,EAAE,CAACM,OAA5C;AAAsD,gBAAA,WAAW,EAAC,aAAlE;AAAgF,gBAAA,QAAQ,EAAEE,aAA1F;AAAyG,gBAAA,KAAK,EAAEP,OAAO,CAACK,OAAxH;AAAiI,gBAAA,IAAI,EAAC;AAAtI;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,eAiBI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,gBAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,OAAnB;AAA2B,gBAAA,YAAY,EAAEN,EAAE,CAACO,SAA5C;AAAwD,gBAAA,WAAW,EAAC,aAApE;AAAkF,gBAAA,QAAQ,EAAEC,aAA5F;AAA2G,gBAAA,KAAK,EAAEP,OAAO,CAACM,SAA1H;AAAqI,gBAAA,IAAI,EAAC;AAA1I;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBJ,eAqBK,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,IAAI,EAAC,QAA/B;AAAwC,cAAA,OAAO,EAAE,MAAK;AAAEM,gBAAAA,QAAQ,CAACb,EAAE,CAACc,EAAJ,CAAR;AAAgB,eAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAJF,eAiCE,QAAC,KAAD,CAAO,MAAP;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAEO,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAEA,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJO;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAmDH;;GA1FQtB,K;;KAAAA,K;AA2FT,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport {Button,Modal,Form}from 'react-bootstrap'\nimport {useState,useEffect} from 'react'\nimport axios from 'axios';\n\nconst object1 = {\n  a: 'somestring',\n  b: 42,\n  c: false\n};\n\nconsole.log(Object.keys(object1));\n\nfunction Ubdat({el}) {\n    // pour recupere la valeur\n    const [Inputtt,setInputtt]=useState(\n        {\n            title:el.title,\n            genres:el.genres,\n            director:el.director,\n            runtime:el.runtime,\n            posterUrl:el.posterUrl\n        }\n    )\n    const handleChangee=(e)=>{\n        const {name,value}=e.target;\n        setInputtt(\n            {\n                ...Inputtt,[name]:value\n        \n            }\n        );\n        console.log(Inputtt)\n    }\n    \n    const updatRow=(id)=> {\n\n        axios.put(`http://localhost:3008/posts/${id}`, Inputtt)\n        .then(response => {\n          setInputtt( response.data);})\n      }\n      console.log('updaaaaaate',  Inputtt)\n\n      useEffect(()=> {updatRow()\n      },[]   )\n\n        \n//fin recuperation    \n    const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n    return (\n        <div>\n             <>\n      <button onClick={handleShow} >    <i class=\"fas fa-edit\"></i>  </button>\n    \n\n      <Modal show={show} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            { /*----------FormModal---------*/ }\n            <Form >\n                <Form.Group controlId=\"formGroupTexte\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control type=\"texte\" defaultValue={el.title} placeholder=\"enter texte\" onChange={handleChangee} value={Inputtt.title} name=\"title\"  />\n                </Form.Group>\n                <Form.Group controlId=\"formGroupTexte\">\n                    <Form.Label>Geners</Form.Label>\n                    <Form.Control type=\"texte\" defaultValue={el.genres}  placeholder=\"enter texte\"  onChange={handleChangee} value={Inputtt.genres} name=\"genres\"  />\n                </Form.Group>\n                <Form.Group controlId=\"formGroupTexte\">\n                    <Form.Label>Director</Form.Label>\n                    <Form.Control type=\"texte\" defaultValue={el.director}  placeholder=\"enter texte\" onChange={handleChangee} value={Inputtt.director} name=\"director\" />\n                </Form.Group>\n                <Form.Group controlId=\"formGroupTexte\">\n                    <Form.Label>Runtime</Form.Label>\n                    <Form.Control type=\"texte\" defaultValue={el.runtime}  placeholder=\"enter texte\" onChange={handleChangee} value={Inputtt.runtime} name=\"runtime\"  />\n                </Form.Group>\n                <Form.Group controlId=\"formGroupTexte\">\n                    <Form.Label>PosteUrl</Form.Label>\n                    <Form.Control type=\"texte\" defaultValue={el.posterUrl}  placeholder=\"enter texte\" onChange={handleChangee} value={Inputtt.posterUrl} name=\"posterUrl\" />\n                </Form.Group>\n                 <Button variant=\"primary\" type=\"submit\" onClick={() =>{ updatRow(el.id)}}>\n                   Submit\n                 </Button>\n                </Form>\n            {/*---------------*/ }\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n        </div>\n    )\n}\nexport default Ubdat ;"]},"metadata":{},"sourceType":"module"}